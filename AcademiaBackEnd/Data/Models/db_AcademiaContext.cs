// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace AcademiaBackEnd.Data.Models;

public partial class db_AcademiaContext : DbContext
{
    public db_AcademiaContext(DbContextOptions<db_AcademiaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Exercicio> Exercicios { get; set; }

    public virtual DbSet<Relacionamento> Relacionamentos { get; set; }

    public virtual DbSet<SessaoTreino> SessaoTreinos { get; set; }

    public virtual DbSet<Solicitaco> Solicitacoes { get; set; }

    public virtual DbSet<Treino> Treinos { get; set; }

    public virtual DbSet<TreinoExercicio> TreinoExercicios { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Exercicio>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Exercise");
        });

        modelBuilder.Entity<Relacionamento>(entity =>
        {
            entity.Property(e => e.DataConfirmacao).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Aluno).WithOne(p => p.RelacionamentoAluno)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_relacionamentos_usuario");

            entity.HasOne(d => d.Professor).WithMany(p => p.RelacionamentoProfessors)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_relacionamentos_usuario1");
        });

        modelBuilder.Entity<SessaoTreino>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Workout_Session");

            entity.HasOne(d => d.Cliente).WithMany(p => p.SessaoTreinos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Workout_Session_Client");

            entity.HasOne(d => d.Treino).WithMany(p => p.SessaoTreinos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Workout_WorkoutSession");
        });

        modelBuilder.Entity<Solicitaco>(entity =>
        {
            entity.Property(e => e.Status).HasDefaultValue("Pendente");

            entity.HasOne(d => d.Cliente).WithMany(p => p.SolicitacoClientes)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_solicitacoes_solicitacoes_cliente");

            entity.HasOne(d => d.Professor).WithMany(p => p.SolicitacoProfessors)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_solicitacoes_usuario_professor");
        });

        modelBuilder.Entity<Treino>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Workout");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Treinos).HasConstraintName("FK_Workout_Client");
        });

        modelBuilder.Entity<TreinoExercicio>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_TreinoExercicio");

            entity.HasOne(d => d.IdExercicioNavigation).WithMany(p => p.TreinoExercicios)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WorkoutExercise_Exercise");

            entity.HasOne(d => d.IdTreinoNavigation).WithMany(p => p.TreinoExercicios)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WorkoutExercise_Workout");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Client");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}